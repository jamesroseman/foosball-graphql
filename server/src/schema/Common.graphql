### COMMON SCHEMA ###

# Helper types
scalar Date

# Relay common types
interface Node {
  id: ID!
}
type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: ID
  endCursor: ID
}
input ConnectionArgs {
  first: Int,
  last: Int,
  before: ID,
  after: ID
}

# Root Query type
type Query {
  # Relay signatures
  node(id: ID!): Node

  # Model signatures
  game(id: ID!): Game,
  games(first: Int, after: String, last: Int, before: String): GameConnection,
  team(id: ID!): Team,
  teams(first: Int, after: String, last: Int, before: String): TeamConnection,
  user(id: ID!): User,
  users(first: Int, after: String, last: Int, before: String): UserConnection,
  ## Add new model signatures above this comment ##
}

# Root Mutation type
type Mutation {
  introduceGame(input: IntroduceGameInput): IntroduceGamePayload,
  introduceTeam(input: IntroduceTeamInput): IntroduceTeamPayload,
  ## Add new model mutation signatures above this comment ##
}
